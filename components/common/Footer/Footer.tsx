import { FC } from 'react'
import cn from 'classnames'
import Link from 'next/link'
import { useRouter } from 'next/router'
import type { Page } from '@commerce/types/page'
import getSlug from '@lib/get-slug'
import { Github, Vercel } from '@components/icons'
import { Logo, Container } from '@components/ui'
import { I18nWidget } from '@components/common'
import s from './Footer.module.css'

interface Props {
  className?: string
  children?: any
  pages?: Page[]
}

const links = [
  {
    name: 'Home',
    url: '/',
  },
]

const Footer: FC<Props> = ({ className, pages }) => {
  const { sitePages } = usePages(pages)
  const rootClassName = cn(s.root, className)

  return (
    <footer className={rootClassName}>
      <Container>
        <div className="grid grid-cols-1 lg:grid-cols-12 gap-8 border-b border-accent-2 py-12 text-primary bg-primary transition-colors duration-150">
          <div className="col-span-1 lg:col-span-2">
            <Link href="/">
              <a className="flex flex-initial items-center font-bold md:mr-24">
                <span className="mr-2">
                  <Logo />
                </span>
                <span>TSRB.shop</span>
              </a>
            </Link>
          </div>
          <div className="col-span-1 lg:col-span-8">
            <div className="grid md:grid-rows-4 md:grid-cols-3 md:grid-flow-col">
              {[...links, ...sitePages].map((page) => (
                <span key={page.url} className="py-3 md:py-0 md:pb-4">
                  <Link href={page.url!}>
                    <a className="text-accent-9 hover:text-accent-6 transition ease-in-out duration-150">
                      {page.name}
                    </a>
                  </Link>
                </span>
              ))}
            </div>
          </div>
          {/* <div className="col-span-1 lg:col-span-2 flex items-start lg:justify-end text-primary">
            <div className="flex space-x-6 items-center h-10">
              <a
                className={s.link}
                aria-label="Github Repository"
                href="https://github.com/vercel/commerce"
              >
                {/* <Github /> */}
              {/* </a> */}
              {/* <I18nWidget
            </div>
          </div> */}
        </div>
        <div className="pt-6 pb-10 flex flex-col md:flex-row justify-between items-center space-y-4 text-accent-6 text-sm">
          <div>
            <span>&copy; 2021 TSRB.shop</span>
          </div>
          <div className="flex items-center text-primary text-sm">
            <span className="text-primary">Created by</span>
            <a
              rel="noopener noreferrer"
              href="https://vercel.com"
              aria-label="Vercel.com Link"
              target="_blank"
              className="text-primary"
            >
              <svg
                // width="197"
                // height="177"
                className="inline-block h-12 ml-3 text-primary"
                viewBox="0 0 197 177"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M67.0107 123.797C67.0107 122.929 66.5566 122.233 65.6484 121.708C64.7402 121.183 63.0146 120.638 60.4717 120.073C57.9287 119.508 55.8298 118.771 54.1748 117.863C52.5199 116.935 51.2585 115.815 50.3906 114.503C49.5228 113.191 49.0889 111.688 49.0889 109.992C49.0889 106.985 50.3301 104.513 52.8125 102.575C55.2949 100.618 58.5443 99.6387 62.5605 99.6387C66.8796 99.6387 70.3509 100.618 72.9746 102.575C75.5983 104.533 76.9102 107.106 76.9102 110.295H66.6777C66.6777 107.671 65.2952 106.359 62.5303 106.359C61.4606 106.359 60.5625 106.662 59.8359 107.268C59.1094 107.853 58.7461 108.59 58.7461 109.478C58.7461 110.386 59.1901 111.122 60.0781 111.688C60.9661 112.253 62.3789 112.717 64.3164 113.08C66.2741 113.443 67.9896 113.877 69.4629 114.382C74.3874 116.077 76.8496 119.115 76.8496 123.494C76.8496 126.481 75.5176 128.913 72.8535 130.79C70.2096 132.667 66.7786 133.605 62.5605 133.605C59.7552 133.605 57.2526 133.101 55.0527 132.092C52.8529 131.083 51.1374 129.71 49.9062 127.975C48.6751 126.239 48.0596 124.412 48.0596 122.495H57.5957C57.6361 124.009 58.1406 125.119 59.1094 125.825C60.0781 126.511 61.3193 126.854 62.833 126.854C64.2256 126.854 65.265 126.572 65.9512 126.007C66.6576 125.442 67.0107 124.705 67.0107 123.797ZM91.623 103.756C93.8027 101.011 96.5879 99.6387 99.9785 99.6387C103.591 99.6387 106.316 100.708 108.152 102.848C109.989 104.987 110.927 108.146 110.968 112.323V133H100.735V112.565C100.735 110.83 100.382 109.558 99.6758 108.751C98.9694 107.924 97.7686 107.51 96.0732 107.51C93.9743 107.51 92.4909 108.176 91.623 109.508V133H81.4209V86.5H91.623V103.756ZM115.357 116.319C115.357 113.05 115.993 110.144 117.265 107.601C118.536 105.037 120.363 103.07 122.744 101.697C125.126 100.325 127.921 99.6387 131.13 99.6387C136.034 99.6387 139.899 101.162 142.725 104.21C145.55 107.237 146.963 111.365 146.963 116.592V116.955C146.963 122.061 145.54 126.118 142.694 129.125C139.869 132.112 136.034 133.605 131.19 133.605C126.528 133.605 122.785 132.213 119.959 129.428C117.133 126.622 115.61 122.828 115.388 118.045L115.357 116.319ZM125.56 116.955C125.56 119.982 126.034 122.202 126.982 123.615C127.931 125.028 129.334 125.734 131.19 125.734C134.823 125.734 136.68 122.939 136.761 117.349V116.319C136.761 110.446 134.884 107.51 131.13 107.51C127.719 107.51 125.872 110.043 125.59 115.108L125.56 116.955ZM181.868 116.864C181.868 121.95 180.718 126.017 178.417 129.064C176.136 132.092 173.049 133.605 169.153 133.605C166.146 133.605 163.674 132.506 161.736 130.306V145.594H151.534V100.244H161.07L161.373 103.271C163.331 100.85 165.904 99.6387 169.093 99.6387C173.129 99.6387 176.268 101.132 178.508 104.119C180.748 107.086 181.868 111.173 181.868 116.38V116.864ZM171.666 116.229C171.666 110.416 169.971 107.51 166.58 107.51C164.158 107.51 162.544 108.378 161.736 110.113V123.01C162.624 124.826 164.259 125.734 166.641 125.734C169.89 125.734 171.565 122.929 171.666 117.318V116.229Z"
                  fill="white"
                />
                <path
                  d="M27.6328 45.9259V54.0695H33.0215V61.1534H27.6328V76.1388C27.6328 77.3699 27.8548 78.2277 28.2988 78.712C28.7428 79.1964 29.6208 79.4386 30.9326 79.4386C31.9417 79.4386 32.7894 79.3781 33.4756 79.257V86.5529C31.639 87.1381 29.7217 87.4308 27.7236 87.4308C24.2119 87.4308 21.6185 86.6033 19.9434 84.9484C18.2682 83.2934 17.4307 80.7807 17.4307 77.4103V61.1534H13.2529V54.0695H17.4307V45.9259H27.6328ZM60.4129 77.6222C60.4129 76.7544 59.9588 76.0581 59.0506 75.5333C58.1424 75.0086 56.4168 74.4637 53.8738 73.8986C51.3309 73.3335 49.2319 72.5968 47.577 71.6886C45.922 70.7602 44.6606 69.6401 43.7928 68.3282C42.9249 67.0164 42.491 65.5128 42.491 63.8175C42.491 60.8103 43.7322 58.338 46.2146 56.4005C48.6971 54.4428 51.9464 53.464 55.9627 53.464C60.2817 53.464 63.7531 54.4428 66.3768 56.4005C69.0005 58.3582 70.3123 60.9314 70.3123 64.1202H60.0799C60.0799 61.4965 58.6974 60.1847 55.9324 60.1847C54.8628 60.1847 53.9646 60.4874 53.2381 61.0929C52.5115 61.6782 52.1482 62.4148 52.1482 63.3029C52.1482 64.2111 52.5923 64.9477 53.4803 65.5128C54.3683 66.0779 55.7811 66.5421 57.7186 66.9054C59.6762 67.2687 61.3917 67.7026 62.865 68.2072C67.7895 69.9025 70.2518 72.9399 70.2518 77.3195C70.2518 80.3064 68.9197 82.7384 66.2557 84.6154C63.6118 86.4923 60.1808 87.4308 55.9627 87.4308C53.1574 87.4308 50.6548 86.9262 48.4549 85.9171C46.255 84.908 44.5395 83.5356 43.3084 81.7999C42.0773 80.0642 41.4617 78.2378 41.4617 76.3204H50.9979C51.0382 77.8341 51.5428 78.9441 52.5115 79.6505C53.4803 80.3367 54.7215 80.6798 56.2352 80.6798C57.6277 80.6798 58.6671 80.3973 59.3533 79.8322C60.0597 79.267 60.4129 78.5304 60.4129 77.6222ZM101.064 63.3029L97.7037 63.0607C94.4947 63.0607 92.4361 64.0698 91.5279 66.088V86.8253H81.3258V54.0695H90.8922L91.2252 58.2775C92.9407 55.0685 95.3323 53.464 98.4 53.464C99.4898 53.464 100.438 53.5851 101.246 53.8273L101.064 63.3029ZM141.352 70.7198C141.352 76.0883 140.242 80.2156 138.022 83.1017C135.802 85.9878 132.674 87.4308 128.637 87.4308C125.307 87.4308 122.623 86.1088 120.584 83.465L120.161 86.8253H111.018V40.3253H121.22V56.7032C123.117 54.5437 125.569 53.464 128.577 53.464C132.653 53.464 135.802 54.9272 138.022 57.8536C140.242 60.7801 141.352 64.8973 141.352 70.2052V70.7198ZM131.12 70.0841C131.12 66.9357 130.696 64.6954 129.848 63.3634C129.021 62.0112 127.739 61.3351 126.003 61.3351C123.703 61.3351 122.108 62.213 121.22 63.9689V76.9865C122.088 78.7221 123.703 79.59 126.064 79.59C128.466 79.59 129.989 78.4194 130.635 76.0782C130.958 74.9279 131.12 72.9298 131.12 70.0841ZM158.39 76.9259C160.004 76.9259 161.347 77.4103 162.416 78.379C163.486 79.3276 164.021 80.5486 164.021 82.0421C164.021 83.5356 163.486 84.7667 162.416 85.7355C161.347 86.684 160.004 87.1583 158.39 87.1583C156.755 87.1583 155.403 86.674 154.333 85.7052C153.284 84.7365 152.759 83.5154 152.759 82.0421C152.759 80.5688 153.284 79.3478 154.333 78.379C155.403 77.4103 156.755 76.9259 158.39 76.9259Z"
                  fill="white"
                />
              </svg>

              {/* <Vercel
                className="inline-block h-6 ml-3 text-primary"
                alt="Vercel.com Logo"
              /> */}
            </a>
          </div>
        </div>
      </Container>
    </footer>
  )
}

function usePages(pages?: Page[]) {
  const { locale } = useRouter()
  const sitePages: Page[] = []

  if (pages) {
    pages.forEach((page) => {
      const slug = page.url && getSlug(page.url)
      if (!slug) return
      if (locale && !slug.startsWith(`${locale}/`)) return
      sitePages.push(page)
    })
  }

  return {
    sitePages: sitePages.sort(bySortOrder),
  }
}

// Sort pages by the sort order assigned in the BC dashboard
function bySortOrder(a: Page, b: Page) {
  return (a.sort_order ?? 0) - (b.sort_order ?? 0)
}

export default Footer
